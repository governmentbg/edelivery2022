using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using System.Threading.Tasks;
using System.Threading;

namespace MalwareServiceStub
{
    public class EmailWorker : BackgroundService
    {
        private readonly ILogger<SimpleSmtpServer> _logger;

        public EmailWorker(ILogger<SimpleSmtpServer> logger)
        {
            this._logger = logger;
        }

        protected override async Task ExecuteAsync(CancellationToken stoppingToken)
        {
            using (var server = SimpleSmtpServer.Start(25, this._logger))
            {
                this._logger.LogInformation("Start SMTP listener");

                server.MessageReceived += (sender, args) =>
                {
                    // Get message body.
                    var body = args.Message.MessageParts[0].BodyData;
                    this._logger.LogInformation("Message body: {body}", body);
                };

                while (!stoppingToken.IsCancellationRequested)
                {
                    await Task.Delay(30000, stoppingToken);
                }
            }
        }
    }
}
