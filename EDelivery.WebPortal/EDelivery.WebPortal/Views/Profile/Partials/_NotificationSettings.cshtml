@model LoginProfileSettingsViewModel

<div id="settings-content">
    @using (Ajax.BeginForm(
        "UpdateSettings",
        null,
        new AjaxOptions()
        {
            AllowCache = false,
            HttpMethod = "Post",
            InsertionMode = InsertionMode.ReplaceWith,
            UpdateTargetId = "settings-content",
            OnSuccess = $"gf.showSuccess('{ProfilePage.MessageSaveSettingsSuccess}', 2);",
            OnFailure = $"gf.showError('{ErrorMessages.ErrorSystemGeneral}', 2);"
        },
        new { }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.ProfileId)
        @Html.HiddenFor(x => x.TargetGroupId)

        <div class="wrapper content-wrapper message-box">
            <div class="form-row" style="margin-top: 0px;">
                <div>
                    <h5>@ProfilePage.TitleSectionNotificationSettingsViaEmail</h5>
                </div>
            </div>

            <ul class="col-list">
                <li class="form-row">
                    <label for="Email">Имейл <span class="txt-red">*</span>:</label>
                    <div class="form-element">
                        @Html.TextBoxFor(x => x.Email)
                        @Html.ValidationMessageFor(x => x.Email, null, new { @class = "validation-message" })
                    </div>
                </li>
            </ul>

            <div class="form-row" style="margin-top: 5px;">
                <div>
                    <div class="form-group">
                        @Html.CheckBoxFor(x => x.IsEmailNotificationEnabled)
                        @Html.LabelFor(x => x.IsEmailNotificationEnabled, LoginRegisterPage.LabelEmailNotificationsOnReceiving)
                    </div>
                    <div class="form-group">
                        @Html.CheckBoxFor(x => x.IsEmailNotificationOnDeliveryEnabled)
                        @Html.LabelFor(x => x.IsEmailNotificationOnDeliveryEnabled, LoginRegisterPage.LabelEmailNotificationsOnDelivery)
                    </div>
                </div>
            </div>

            <br />
            <div class="form-row">
                <div>
                    <h5>@ProfilePage.TitleSectionNotificationSettingsViaPhone</h5>
                </div>
            </div>

            <ul class="col-list">
                <li class="form-row">
                    <label for="Phone">Телефон <span class="txt-red">*</span>:</label>
                    <div class="form-element">
                        @Html.TextBoxFor(x => x.Phone)
                        @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "validation-message" })
                        <div class="icon-hint icon-hint--@(this.Model.IsValidMobilePhone ? "info" : "warning") icon-hint--input-text"
                             data-toggle="tooltip"
                             data-original-title="@Common.InfoPhoneNumberFormat">
                        </div>
                    </div>
                </li>
            </ul>

            <div class="form-row" style="margin-top: 5px;">
                @{
                    bool isDisabled =
                        Model.TargetGroupId == (int)EDelivery.WebPortal.Enums.TargetGroupId.PublicAdministration;
                }

                @if (isDisabled)
                {
                    <div>
                        <div class="form-group disabled">
                            @Html.CheckBoxFor(x => x.IsPhoneNotificationEnabled, new { disabled = "disabled" })
                            @Html.LabelFor(x => x.IsPhoneNotificationEnabled, LoginRegisterPage.LabelPhoneNotificationsOnReceiving, new { @class = "disabled" })
                        </div>
                        <div class="form-group disabled">
                            @Html.CheckBoxFor(x => x.IsPhoneNotificationOnDeliveryEnabled, new { disabled = "disabled" })
                            @Html.LabelFor(x => x.IsPhoneNotificationOnDeliveryEnabled, LoginRegisterPage.LabelPhoneNotificationsOnDelivery, new { @class = "disabled" })
                        </div>
                    </div>
                }
                else
                {
                    <div>
                        <div class="form-group">
                            @Html.CheckBoxFor(x => x.IsPhoneNotificationEnabled)
                            @Html.LabelFor(x => x.IsPhoneNotificationEnabled, LoginRegisterPage.LabelPhoneNotificationsOnReceiving)
                        </div>
                        <div class="form-group">
                            @Html.CheckBoxFor(x => x.IsPhoneNotificationOnDeliveryEnabled)
                            @Html.LabelFor(x => x.IsPhoneNotificationOnDeliveryEnabled, LoginRegisterPage.LabelPhoneNotificationsOnDelivery)
                        </div>
                    </div>
                }
            </div>

            @if (isDisabled)
            {
                <div class="form-row">
                    <div class="da-tooltip attached iconed red">
                        <div class="icon-info"></div>
                        @Html.Raw(ProfilePage.InfoPhoneNotificationsTurnedOff)
                    </div>
                </div>
            }
            else
            {
                <div class="form-row">
                    <div class="da-tooltip attached iconed">
                        <div class="icon-info"></div>
                        @Html.Raw(ProfilePage.InfoPhoneNotificationChoice)
                    </div>
                </div>
            }
        </div>
        <section class="form-section form-row button-row-left">
            <button class="btn-primary btn-l">@UIControls.ButtonSave</button>
        </section>

        if (!isDisabled)
        {
            <script type="text/javascript">
                $(function () {
                    $('[data-toggle="tooltip"]').tooltip();
                });
            </script>
        }
    }
</div>
