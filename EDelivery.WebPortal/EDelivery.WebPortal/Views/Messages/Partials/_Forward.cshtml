@using EDelivery.WebPortal.Models.Messages

@model ForwardMessageModel

@using (Ajax.BeginForm(
    "Forward",
    "Messages",
    null,
    new AjaxOptions()
    {
        HttpMethod = "POST",
        UpdateTargetId = "forward-message-form",
        InsertionMode = InsertionMode.ReplaceWith
    },
    new { id = "forward-message-form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.ForwardMessageId, new { @id = "messageId" })
    @Html.HiddenFor(x => x.ForwardTemplateId)

    <h2>@Common.TitleForwardMessage</h2>

    <div class="modal-content">
        <section class="form-section">
            <ul class="col-list">
                <li class="form-row">
                    <label for="ForwardRecipientProfileId">@ProfilePage.LabelMessageReceiver <span class="txt-red">*</span>:</label>
                    <div class="form-element">
                        @Html.DropDownListFor(x => x.ForwardRecipientProfileId,
                            Array.Empty<SelectListItem>(),
                            "-- Изберете --",
                            new
                            {
                                @id = "InstitutionsSelect2",
                                @class = "form-select select2",
                                @style = "width: 100%;"
                            })

                        @Html.ValidationMessageFor(x => x.ForwardRecipientProfileId)
                    </div>
                </li>
                <li class="form-row">
                    <label for="ReferencedOrn">@ProfilePage.LabelReferencedOrn:</label>
                    <div class="form-element">
                        @Html.TextBoxFor(x => x.ReferencedOrn)
                        @Html.ValidationMessageFor(x => x.ReferencedOrn, null, new { @class = "validation-message" })
                    </div>
                </li>
                <li class="form-row">
                    <label for="AdditionalIdentifier">@ProfilePage.LabelAdditionalIdentifier:</label>
                    <div class="form-element">
                        @Html.TextBoxFor(x => x.AdditionalIdentifier)
                        @Html.ValidationMessageFor(x => x.AdditionalIdentifier, null, new { @class = "validation-message" })
                    </div>
                </li>
                <li class="form-row">
                    <label for="ForwardSubject">@ProfilePage.LabelMessageTitle <span class="txt-red">*</span>:</label>
                    <div class="form-element">
                        @Html.TextBoxFor(x => x.ForwardSubject)
                        @Html.ValidationMessageFor(x => x.ForwardSubject, null, new { @class = "validation-message" })
                    </div>
                </li>
            </ul>
        </section>
        <style type="text/css">
            textarea {
                height: 150px;
            }
        </style>
        <section class="form-section" id="template">
            <div class="loader"></div>
        </section>
    </div>

    <section class="form-section form-row button-row-right">
        <button class="btn-border btn-m" type="button" id="cancel-forwarding">Откажи</button>
        <button class="btn-primary btn-m" type="submit" id="confirm-message" disabled>@ProfilePage.ButtonForwardMessage</button>
    </section>

    var currentCulture = EDelivery.WebPortal.Utils.CultureHelper.ToSiteCulture(UICulture);
    var select2Language = currentCulture == EDelivery.WebPortal.Enums.eSiteCulture.BG
        ? "bg"
        : "en";

    <script type="text/javascript">
        $(function () {
            $('#InstitutionsSelect2')
                .select2({
                    ajax: {
                        url: "/Search/GetInstitutions",
                        data: function(params) {
                            return $.extend(params,
                                {
                                    messageId: $('#messageId').val(),
                                    page: params.page || 1
                                });
                        },
                        dataType: 'json',
                        cache: false,
                        delay: 250,
                        processResults: function(data) {
                            data.results = $.map(data.results,
                                function(item) {
                                    return {
                                        id: item.id,
                                        text: item.text,
                                        selected: false,
                                        disabled: false
                                    }
                                });

                            return data;
                        }
                    },
                    language: '@select2Language'
                });

            $(document).on('select2:open', function () {
                document.querySelector('.select2-search__field').focus();
            });

            $('#cancel-forwarding').on('click', function () { gf.hideModal(); });

            var values = JSON.parse('@Html.Raw(HttpUtility.UrlDecode(Model.TemplateValuesAsJson))' || '{}');
            var errors = JSON.parse('@Html.Raw(HttpUtility.UrlDecode(Model.TemplateErrorsAsJson))' || '[]');

            $('#template').load(
                '/Templates/Builder/@Model.ForwardTemplateId',
                {
                    container: {
                        values: values,
                        errors: errors
                    }
                },
                function () {
                    $('#confirm-message').prop('disabled', false);
                }
            );
        });
    </script>
}


