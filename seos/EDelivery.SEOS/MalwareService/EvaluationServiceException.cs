using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;

namespace EDelivery.SEOS.MalwareService
{
    /// <summary>
    /// Represents an error that occurred in the Evaluation Service.
    /// </summary>
    public class EvaluationServiceException : Exception
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EvaluationServiceException"/> class.
        /// </summary>
        public EvaluationServiceException()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="EvaluationServiceException"/> class with a specified message.
        /// </summary>
        /// <param name="message">the message that describes the error</param>
        public EvaluationServiceException(string message)
            : base(message)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="EvaluationServiceException"/> class with a specified message and a reference to
        /// the inner exception that is the cause of this exception.
        /// </summary>
        /// <param name="message">the message that describes the error</param>
        /// <param name="innerException">the exception that is the cause of the current exception, or a <value>null</value> reference if no
        /// inner exception is specified</param>
        public EvaluationServiceException(string message, Exception innerException)
            : base(message, innerException)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="EvaluationServiceException"/> class with serialized data.
        /// </summary>
        /// <param name="info">the <see cref="SerializationInfo"/> that holds the serialized object data about the exception being thrown
        /// </param>
        /// <param name="context">the <see cref="StreamingContext"/> that contains contextual information about the source or destination
        /// </param>
        protected EvaluationServiceException(SerializationInfo info, StreamingContext context)
            : base(info, context)
        {
        }
    }
}
