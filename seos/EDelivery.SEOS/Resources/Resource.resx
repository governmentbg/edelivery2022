<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DuplicateMessageGuid" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Уникалният идентификатор на съобщението (MessageGUID) съвпада с този на вече получено/изпратено съобщение.</value>
  </data>
  <data name="ErrorDocumentIsNotFound" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Документът не е открит</value>
  </data>
  <data name="ErrorInReceiver" xml:space="preserve">
    <value>Неуспешен – Грешка при получателя.</value>
  </data>
  <data name="ErrorInSender" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя.</value>
  </data>
  <data name="InvalidClientSertificate" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Клиентският сертификат не съвпада с транспортния сертификат асоцииран с подателя в Регистъра</value>
  </data>
  <data name="InvalidMessageSignature" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Електронният подпис на съобщението е невалиден</value>
  </data>
  <data name="InvalidMessageSignatureCertificate" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Съобщението е електронно подписано с сертификат, различен от транспортния сертификат асоцииран с подателя в Регистъра</value>
  </data>
  <data name="InvalidReceiver" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Получателят на съобщението не съвпада с участника, за който настоящата крайна точка отговаря</value>
  </data>
  <data name="InvalidSender" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Подателят на съобщението не съвпада с активен участник от Регистъра</value>
  </data>
  <data name="InvalidXmlDocument" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Входящото съобщение не е валиден XML документ</value>
  </data>
  <data name="InvalidXSDSchema" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Входящото съобщение не съответства на XSD схемите за обмен на съобщение</value>
  </data>
  <data name="MissingIdentityForReceiverEIK" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Посочено ЕИК на получател в поле DocAttentionTo е грешно или в липсва такъв профил в Системата за сигурно електронно връчване</value>
  </data>
  <data name="MissingReceiverEIK" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Не е посочено ЕИК на получател в поле DocAttentionTo</value>
  </data>
  <data name="ReceiverDiscrepancy" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Не съответства AS4 възела на получателя {0} с този, записан в регистъра на участниците {1}</value>
  </data>
  <data name="SenderDiscrepancy" xml:space="preserve">
    <value>Неуспешен – Грешка при подателя. Не съответства AS4 възела на подателя {0} с този, записан в регистъра на участниците {1}</value>
  </data>
  <data name="SubmitAs4MessageError" xml:space="preserve">
    <value>Submit As4 message as4Guid {0}, seosGuid {1}, docGuid {2}, type {3}, sender {4}, receiver {5} failed with Exception: {6}</value>
  </data>
  <data name="SubmitAs4MessageSuccess" xml:space="preserve">
    <value>Submit As4 message is successful as4Guid {0}, seosGuid {1}, type {2}</value>
  </data>
  <data name="SubmitMessageError" xml:space="preserve">
    <value>Submit message guid {0}, docGuid {1}, type {2}, sender {3}, receiver {4} failed with Exception: {5}</value>
  </data>
  <data name="SubmitMessageValidateRespnseError" xml:space="preserve">
    <value>Submit message guid {0}, docGuid {1}, type {2}, sender {3}, receiver {4}: Signature can not be validated</value>
  </data>
</root>